import { type NextPage } from "next";
import Head from "next/head";

import { Subscribers } from "~/components/Subscribers";
import { ContactLists } from "~/components/ContactLists";
import { Shell } from "~/components/Shell";

const ContactListsPage: NextPage = () => {
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Shell actions={<NewListDialog />}>
        <div className="flex flex-col gap-8">
          <section>
            <ContactLists />
          </section>
        </div>
      </Shell>
    </>
  );
};

import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "~/components/ui/Dialog";
import { api } from "~/utils/api";
import { useCsvDataStore } from "~/utils/csvDataStore";
import { useState } from "react";
import { CSVInputs } from "~/components/Upload";

const NewListDialog = () => {
  return (
    <Dialog>
      <DialogTrigger>+ Add list</DialogTrigger>
      <DialogContent>
        <DialogHeader>
          <DialogTitle>Add list</DialogTitle>
          <NewListForm />
        </DialogHeader>
      </DialogContent>
    </Dialog>
  );
};

const NewListForm = ({ initialFileData }: { initialFileData?: string }) => {
  const addContacts = api.subscriber.createMany.useMutation();
  const addList = api.list.create.useMutation();
  const { clearStore, parsedData } = useCsvDataStore();

  // TODO: this is here only because of initialFileData, maybe move this to CSV Inputs???
  const [fileData, setFileData] = useState<string>(initialFileData || "");

  return (
    <form
      onSubmit={(e) => {
        e.preventDefault();
        const listRes = addList.mutate(
          {
            name: e.currentTarget["list-name"].value,
          },
          {
            onSuccess: (data) => {
              if (!parsedData) return;
              addContacts.mutate(
                //  TODO: DAMNNN, this should probably be handled in the parser, I'm doing it EVERYWHERE.
                parsedData.data.map((subscriber) => ({
                  ...subscriber,
                  subscribed: subscriber.subscribed === "true",
                  createdAt:
                    (subscriber.createdAt && new Date(subscriber.createdAt)) ||
                    new Date(),
                  ListId: data.id,
                }))
              );
            },
          }
        );
        clearStore();
      }}
      className="flex flex-col gap-6"
    >
      <div className="mt-6 flex flex-col space-y-2">
        <label
          htmlFor="list-name"
          className="text-slate-11 select-none text-sm"
        >
          Name
        </label>
        <input
          required
          type="text"
          id="list-name"
          name="list-name"
          autoComplete="off"
          className="border-slate-6 bg-slate-4 text-slate-12 focus:ring-slate-7 placeholder:text-slate-11 relative h-8 w-full select-none appearance-none rounded-md border px-2 pl-[--text-field-left-slot-width] pr-[--text-field-right-slot-width] text-sm outline-none transition duration-200 ease-in-out focus:ring-2"
        />
      </div>
      <div className="flex flex-col space-y-6">
        <CSVInputs fileData={fileData} setFileData={setFileData} />
      </div>
      <div className="flex items-center gap-2">
        <button type="submit">Add</button>
        <button type="button">Cancel</button>
      </div>
    </form>
  );
};

export default ContactListsPage;
