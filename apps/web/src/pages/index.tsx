import { type NextPage } from "next";
import Head from "next/head";

import { Subscribers } from "~/components/Subscribers";
import { ContactLists } from "~/components/ContactLists";
import { Shell } from "~/components/Shell";
import { api } from "~/utils/api";

import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "~/components/ui/Dialog";

import {
  Tooltip,
  TooltipContent,
  TooltipProvider,
  TooltipTrigger,
} from "~/components/ui/Tooltip";

import { Button } from "~/components/ui/Button";
import { useComboboxState } from "ariakit/combobox";
import {
  Combobox,
  ComboboxItem,
  ComboboxPopover,
} from "~/components/ui/ComboBox";

import { mockData } from "~/utils/mockData/mockData";
import { createList, createSubscribers } from "~/utils/SDK";

const Home: NextPage = () => {
  const parseAndCreateMany = api.subscriber.parseAndCreateMany.useMutation();
  const { data, error, isLoading } = api.subscriber.getAllFromList.useQuery({
    ListId: 29,
  });

  const comboboxState = useComboboxState({ gutter: 4, sameWidth: true });

  const queryContext = api.useContext();

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Shell>
        <div className="flex flex-col gap-8">
          <Button
            onClick={() => {
              createList("hello from SDK");
            }}
          >
            Create list named "hello from SDK"
          </Button>
          <Button
            onClick={() => {
              createSubscribers(30, mockData.expected, {});
            }}
          >
            Add subscribers with SDK
          </Button>
          <>
            {isLoading && <p>Loading...</p>}
            {error && <p>Error: {error.message}</p>}
            {data && (
              <pre>
                <code>{JSON.stringify(data, null, 2)}</code>
              </pre>
            )}
          </>

          <Dialog>
            <TooltipProvider>
              <Tooltip>
                <TooltipTrigger asChild>
                  <DialogTrigger>
                    <Button>Open</Button>
                  </DialogTrigger>
                </TooltipTrigger>
                <TooltipContent>
                  <p>Open dialog</p>
                </TooltipContent>
              </Tooltip>
            </TooltipProvider>

            <DialogContent>
              <DialogHeader>
                <DialogTitle>Are you sure absolutely sure?</DialogTitle>
                <DialogDescription>
                  This action cannot be undone. This will permanently delete
                  your account and remove your data from our servers.
                </DialogDescription>
              </DialogHeader>
            </DialogContent>
          </Dialog>

          <div className="flex gap-6">
            <Button>Hej</Button>
            <Button variant={"destructive"}>Hej</Button>
            <Button variant={"ghost"}>Hej</Button>
            <Button variant={"outline"}>Hej</Button>
            <Button variant={"link"}>Hej</Button>
          </div>

          <div>
            <Combobox state={comboboxState} />
            <ComboboxPopover state={comboboxState}>
              {["hej", "do", "something", "lol"].map((item) => (
                <ComboboxItem key={item} value={item.toString()} />
              ))}
            </ComboboxPopover>
          </div>
        </div>
      </Shell>
    </>
  );
};

export default Home;
